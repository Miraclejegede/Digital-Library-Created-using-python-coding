class Book:
    def __init__(self, title, author, publication_year):
        self.title = title
        self.author = author
        self.publication_year = publication_year
        self.is_borrowed = False

    def __str__(self):
        return f"{self.title} by {self.author}"

    def borrow(self):
        if self.is_borrowed:
            return False
        self.is_borrowed = True
        return True

    def return_book(self):
        self.is_borrowed = False


class Library:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        self.books.append(book)

    def remove_book(self, book):
        if book in self.books:
            self.books.remove(book)

    def search_by_title(self, title):
        result = []
        for book in self.books:
            if book.title.lower() == title.lower():
                result.append(book)
        return result

    def search_by_author(self, author):
        result = []
        for book in self.books:
            if book.author.lower() == author.lower():
                result.append(book)
        return result

    def available_books(self):
        result = []
        for book in self.books:
            if not book.is_borrowed:
                result.append(book)
        return result


# Example usage:
if __name__ == "__main__":
    # Create some books
    book1 = Book("The Great Gatsby", "F. Scott Fitzgerald", 1925)
    book2 = Book("To Kill a Mockingbird", "Harper Lee", 1960)
    book3 = Book("Pride and Prejudice", "Jane Austen", 1813)

    # Create a library
    library = Library()

    # Add books to the library
    library.add_book(book1)
    library.add_book(book2)
    library.add_book(book3)

    # Search for books
    search_title = "To Kill a Mockingbird"
    search_author = "F. Scott Fitzgerald"

    books_by_title = library.search_by_title(search_title)
    print(f"Books with title '{search_title}':")
    for book in books_by_title:
        print(book)

    books_by_author = library.search_by_author(search_author)
    print(f"Books by author '{search_author}':")
    for book in books_by_author:
        print(book)

    # Borrow a book
    book_to_borrow = book1
    if book_to_borrow.borrow():
        print(f"Book '{book_to_borrow}' has been borrowed.")
    else:
        print(f"Book '{book_to_borrow}' is already borrowed.")

    # Return a book
    book_to_return = book1
    book_to_return.return_book()
    print(f"Book '{book_to_return}' has been returned.")

    # Display available books
    available_books = library.available_books()
    print("Available books:")
    for book in available_books:
        print(book)
